name: ci

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    # Set permissions for GitHub Pages deployment
    permissions:
      contents: read
      pages: write
      id-token: write
      pull-requests: write

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 3. Set up JDK 19 with enhanced caching
      - name: Set up JDK 19
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 19
          cache: maven
          cache-dependency-path: '**/pom.xml'

      # 4. Cache Maven dependencies for faster builds
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 5. Setup Chrome for headless testing (commented for API-only tests)
      # Uncomment when Selenium tests are ready
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      # 6. Install Allure CLI
      - name: Install Allure CLI
        run: |
          echo "Installing Allure CLI..."
          curl -o allure-2.30.0.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.30.0/allure-commandline-2.30.0.tgz
          sudo tar -zxvf allure-2.30.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.30.0/bin/allure /usr/bin/allure
          echo "Allure version:"
          allure --version

      # 7. Validate test environment
      - name: Validate Environment
        run: |
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn -version
          echo "Allure version:"
          allure --version

      # 8. Clean old directories and run tests with better error handling
      - name: Clean and run tests
        run: |
          rm -rf target/allure-results target/allure-report || true
          echo "Starting test execution..."
          mvn clean test -Dtest=PortfolioTest
#        -B -V
        env:
          # Environment variables for consistent test execution
          # MAVEN_OPTS: "-Xmx1024m -XX:MaxPermSize=256m"
          # Uncomment for Selenium tests:
          HEADLESS: true

      # 9. Generate Allure HTML report using CLI
      - name: Generate Allure Report
        if: always()
        run: |
          if [ -d "target/allure-results" ]; then
            echo "Generating Allure report..."
            allure generate target/allure-results --clean -o target/allure-report
            echo "Report generated successfully"
          else
            echo "No allure-results directory found"
            exit 1
          fi

      # 10. Upload test results summary (lightweight)
      - name: Upload Test Results Summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            target/surefire-reports/
            target/allure-results/
          retention-days: 7

      # 11. Upload Allure report (for team access)
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ github.run_number }}
          path: target/allure-report/
          retention-days: 14

      # 12. Setup GitHub Pages (if deploying)
      - name: Setup Pages
        if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/configure-pages@v4

      # 13. Deploy to GitHub Pages (only on main/master branch)
      - name: Deploy Allure Report to GitHub Pages
        if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/deploy-pages@v4
        with:
          artifact_name: allure-report-${{ github.run_number }}

      # 15. Test Results Summary (always run for visibility)
      - name: Test Results Summary
        if: always()
        run: |
          echo "=== Test Execution Summary ==="
          echo "Workflow: ${{ github.workflow }}"
          echo "Run Number: ${{ github.run_number }}"
          echo "Branch: ${{ github.ref }}"
          echo "Job Status: ${{ job.status }}"
          echo "============================="
          
          if [ -d "target/allure-report" ]; then
            echo "✅ Allure report generated in target/allure-report/"
          else
            echo "❌ Allure report not found"
          fi
          
          if [ -d "target/surefire-reports" ]; then
            echo "✅ Surefire reports available"
            ls -la target/surefire-reports/ || true
          else
            echo "❌ No surefire reports found"
          fi