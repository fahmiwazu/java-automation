name: ci

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    # Set permissions for GitHub Pages deployment
    permissions:
      contents: read
      pages: write
      id-token: write
      pull-requests: write

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 3. Set up JDK 19 with enhanced caching
      - name: Set up JDK 19
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 19
          cache: maven
          cache-dependency-path: '**/pom.xml'

      # 4. Cache Maven dependencies for faster builds
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 5. Setup Chrome for headless testing (commented for API-only tests)
      # Uncomment when Selenium tests are ready
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      # 6. Install Allure CLI
      - name: Install Allure CLI
        run: |
          echo "Installing Allure CLI..."
          curl -o allure-2.30.0.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.30.0/allure-commandline-2.30.0.tgz
          sudo tar -zxvf allure-2.30.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.30.0/bin/allure /usr/bin/allure
          echo "Allure version:"
          allure --version

      # 7. Validate test environment
      - name: Validate Environment
        run: |
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn -version
          echo "Allure version:"
          allure --version

      # 8. Clean old directories and run tests with better error handling
      - name: Clean and run tests
        run: |
          rm -rf target/allure-results target/allure-report || true
          echo "Starting test execution..."
          mvn clean test -Dtest=PortfolioTest
#        -B -V
        env:
          # Environment variables for consistent test execution
          # MAVEN_OPTS: "-Xmx1024m -XX:MaxPermSize=256m"
          # Uncomment for Selenium tests:
          HEADLESS: true

      # 9. Generate Allure HTML report using CLI
      - name: Generate Allure Report
        if: always()
        run: |
          echo "Checking for test results..."
          if [ -d "target/allure-results" ] && [ "$(ls -A target/allure-results)" ]; then
            echo "Allure results found, generating report..."
            ls -la target/allure-results/
            allure generate target/allure-results --clean -o target/allure-report
            echo "Report generated successfully"
            ls -la target/allure-report/
          else
            echo "No allure-results found or directory is empty"
            echo "Creating empty report structure..."
            mkdir -p target/allure-report
            echo "<html><body><h1>No test results found</h1><p>The test execution did not generate Allure results.</p></body></html>" > target/allure-report/index.html
          fi

      - name: Upload Test Results Summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            target/surefire-reports/
            target/allure-results/
            target/allure-report/
          retention-days: 7

      # 10. Upload Allure Report
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ github.run_number }}
          path: target/allure-report/
          retention-days: 14

      # 11. FIXED: Setup GitHub Pages properly
      - name: Setup Pages
        if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/configure-pages@v4

      # 12. FIXED: Upload to Pages (new method)
      - name: Upload Pages Artifact
        if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/allure-report/

      # 13. FIXED: Deploy to GitHub Pages (new method)
      - name: Deploy to GitHub Pages
        if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment with Pages URL
        if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && steps.deployment.outputs.page_url
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deployment.outputs.page_url }}';
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `ðŸš€ **Allure Report Deployed**\n\nðŸ“Š View the report at: ${deploymentUrl}`
            });

      - name: Debug Information
        if: always()
        run: |
          echo "=== Debug Information ==="
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Event: ${{ github.event_name }}"
          echo "Working directory:"
          pwd
          echo "Directory structure:"
          find . -name "target" -type d -exec ls -la {} \; || true
          echo "=========================="