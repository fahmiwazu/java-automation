<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.fahmi</groupId>
    <artifactId>automation</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <name>automation</name>
    <url>http://maven.apache.org</url>

    <!-- Project Properties -->
    <properties>
        <allure.version>2.34.1</allure.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>19</maven.compiler.source>
        <maven.compiler.target>19</maven.compiler.target>
        <junit.version>5.13.4</junit.version>
        <junit.platform.version>1.13.4</junit.platform.version>
        <!-- Allure results directory -->
        <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
        <allure.report.directory>${project.build.directory}/allure-report</allure.report.directory>
    </properties>

    <dependencies>
        <!-- Selenium WebDriver -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>4.35.0</version>
        </dependency>

        <!-- JUnit 5 (all components) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.13.4</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit Platform Launcher -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.13.4</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit Jupiter Engine -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.13.4</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit Jupiter API -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.13.4</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit Data Provider (for parameterized tests) -->
        <dependency>
            <groupId>com.tngtech.junit.dataprovider</groupId>
            <artifactId>junit4-dataprovider</artifactId>
            <version>2.10</version>
            <scope>test</scope>
        </dependency>

        <!-- REST Assured (API Testing) -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>5.5.5</version>
            <scope>test</scope>
        </dependency>

        <!-- Jackson Databind (JSON handling) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.19.2</version>
        </dependency>

        <!-- Jackson Annotations -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.19.2</version>
        </dependency>

        <!-- Rest Assured JSON Schema Validator -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>5.5.5</version>
        </dependency>

        <!-- WebDriverManager (auto-manage drivers) -->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>6.1.0</version>
        </dependency>

        <!-- Apache Commons Lang (Utility functions) -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.18.0</version>
        </dependency>

        <!-- Logging Framework (Logback) -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.5.18</version>
            <scope>compile</scope>
        </dependency>

        <!-- Apache Commons IO -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.19.0</version>
        </dependency>

        <!-- Apache Commons Codec -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.19.0</version>
        </dependency>

        <!-- Hamcrest (Matchers for testing) -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>

        <!-- AssertJ (Fluent assertions for testing) -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.27.3</version>
            <scope>test</scope>
        </dependency>

        <!-- Lombok (Boilerplate code reduction) -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.30</version>
        </dependency>

        <!-- Allure JUnit 5 Integration -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit5</artifactId>
            <version>2.29.1</version>
        </dependency>

        <!-- Allure Rest Assured Integration -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-rest-assured</artifactId>
            <version>2.29.1</version>
        </dependency>

        <!-- Allure Selenium Integration -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-selenide</artifactId>
            <version>2.29.1</version>
        </dependency>

        <dependency>
            <groupId>io.appium</groupId>
            <artifactId>java-client</artifactId>
            <version>10.0.0</version>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <!-- Maven Compiler Plugin (Java 19 compilation) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <source>19</source>
                    <target>19</target>
                </configuration>
            </plugin>

            <!-- Maven Surefire Plugin (Test execution with parallel support) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.4</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                    </includes>
                    <!-- Parallel Execution Capability -->
                    <parallel>classes</parallel>
                    <threadCount>2</threadCount>
                    <perCoreThreadCount>false</perCoreThreadCount>
                    <useUnlimitedThreads>false</useUnlimitedThreads>

                    <!-- FIX: Prevent corrupted channel warnings -->
                    <forkCount>1</forkCount>
                    <reuseForks>true</reuseForks>

                    <!-- Redirect stdout/stderr to prevent corruption -->
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>

                    <!-- Use TCP/IP communication instead of native streams -->
                    <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>

                    <!-- Allure Results Directory -->
                    <systemPropertyVariables>
                        <allure.results.directory>${allure.results.directory}</allure.results.directory>
                        <!-- Suppress WebDriverManager logs -->
                        <wdm.targetPath>${project.basedir}/target/webdriver</wdm.targetPath>
                        <wdm.cachePath>${project.basedir}/target/webdriver-cache</wdm.cachePath>
                        <!-- Selenium logging -->
                        <webdriver.chrome.silentOutput>true</webdriver.chrome.silentOutput>
                        <webdriver.edge.silentOutput>true</webdriver.edge.silentOutput>
                    </systemPropertyVariables>

                    <!-- Additional args to prevent issues -->
                    <argLine>
                        -Xmx1024m
                        -Djava.awt.headless=true
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
